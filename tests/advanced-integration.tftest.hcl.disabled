# Simplified Integration Tests - Configuration Validation Only
# Tests the configuration syntax and basic validation rules
# Focuses on testing that modules can generate valid plans

# Test 1: Basic Module Syntax Validation
run "syntax_validation" {
  command = plan

  # Test with minimal variables to validate syntax
  variables {
    resource_group_name = "test-rg"
    location           = "East US"
    environment        = "dev"
    project_name       = "terraform-lab"
    ssh_public_key     = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC test-key"
    db_admin_username  = "testadmin"
    db_admin_password  = "TestPassword123!"
  }

  assert {
    condition     = output.vnet_id != null
    error_message = "VNet should be planned for creation"
  }

  assert {
    condition     = length(output.public_subnet_ids) > 0
    error_message = "At least one public subnet should be planned"
  }

  assert {
    condition     = length(output.private_subnet_ids) > 0
    error_message = "At least one private subnet should be planned"
  }
}

# Test 2: Environment-specific Configuration
run "environment_configuration_test" {
  command = plan

  variables {
    resource_group_name = "test-rg"
    location           = "East US"
    environment        = "staging"
    project_name       = "terraform-lab"
    ssh_public_key     = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC test-key"
    db_admin_username  = "testadmin"
    db_admin_password  = "TestPassword123!"
  }

  assert {
    condition     = output.vnet_address_space[0] == "10.0.0.0/16"
    error_message = "VNet address space should be correctly configured"
  }

  assert {
    condition = alltrue([
      output.web_vmss_id != null,
      output.app_vmss_id != null
    ])
    error_message = "Both web and app VMSS should be planned for creation"
  }
}

# Test 3: Output Validation
run "output_validation_test" {
  command = plan

  variables {
    resource_group_name = "test-rg"
    location           = "East US"
    environment        = "prod"
    project_name       = "terraform-lab"
    ssh_public_key     = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC test-key"
    db_admin_username  = "testadmin"
    db_admin_password  = "TestPassword123!"
  }

  assert {
    condition = alltrue([
      output.vnet_id != null,
      output.web_load_balancer_id != null,
      output.postgres_server_id != null,
      output.key_vault_id != null
    ])
    error_message = "All main infrastructure components should have valid outputs"
  }

  assert {
    condition = alltrue([
      output.web_nsg_id != null,
      output.app_nsg_id != null,
      output.database_nsg_id != null
    ])
    error_message = "All network security groups should be created"
  }
}